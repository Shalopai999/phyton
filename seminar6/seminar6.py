# Формат: Объясняет преподаватель
# Задача: предложить улучшения кода для уже решённых задач:
# С помощью использования **лямбд, filter, map, zip, enumerate, list comprehension
# В этом случае можно пропустить совсем тривиальные (т.е. задачу 1 или 2 тут точно решать не имеет смысла) - исходите из уровня группы и студента.

# Семинар 2. 1. Напишите программу, которая принимает на вход вещественное число и показывает сумму его цифр.
# Пример:
# 6782 -> 23
# 0,56 -> 11

# num = input('Введите число: ')
# my_list = sum(map(int, num.replace(',','')))
# print(my_list)

# Семинар 2. 2. Задайте список из n чисел последовательности (1 + 1/n)**n, выведеите его на экран, а так же сумму элементов списка.
# Пример:
# Для n=4 -> [2, 2.25, 2.37, 2.44]
# Сумма 9.06

num = input('Введите число: ')
my_list = list(map(list(lambda x : (1 + 1/num)**num, map(int, num))))
print(my_list)

# Семинар 3. 1. Задайте список из нескольких чисел. Напишите программу, которая найдёт сумму элементов списка, стоящих на позиции с нечетным индексом.
# Пример:
# [2, 3, 5, 9, 3] -> на нечётных позициях элементы 3 и 9, ответ: 12

# num = input('Введите числа через запятую: ')
# my_list = list(map(int, num.split(',')))
# print(my_list[1::2])
# print(sum(my_list[1::2]))